/*
 * Copyright (c) 2018 Victor Rendina
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *    http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

package com.victorrendina.dagger2.lifecycle.processor

import com.google.common.truth.Truth.assertAbout
import com.google.testing.compile.JavaFileObjects
import com.google.testing.compile.JavaSourcesSubjectFactory
import org.junit.Test

class DaggerLifecycleProcessorTest {

    @Test
    fun correctCodeGenerated() {

        val firstDep = JavaFileObjects.forSourceString("test.FirstDep", """
        package test;

        import com.victorrendina.dagger2.lifecycle.AutoDispose;
        import com.victorrendina.dagger2.lifecycle.AutoStart;
        import com.victorrendina.dagger2.lifecycle.DaggerLifecycle;

        import javax.inject.Singleton;

        @DaggerLifecycle
        @Singleton
        public class FirstDep implements AutoStart, AutoDispose {
            @Override
            public void dispose() { }

            @Override
            public void start() { }
        }
        """)

        val secondDep = JavaFileObjects.forSourceString("test.SecondDep", """
        package test;

        import com.victorrendina.dagger2.lifecycle.AutoDispose;
        import com.victorrendina.dagger2.lifecycle.DaggerLifecycle;

        import javax.inject.Singleton;

        @DaggerLifecycle
        @Singleton
        public class SecondDep implements AutoDispose {
            @Override
            public void dispose() { }
        }
        """)

        val component = JavaFileObjects.forSourceString("test.component.AppComponent", """
        package test.component;

        import com.victorrendina.dagger2.lifecycle.DaggerLifecycleComponent;
        import dagger.Component;
        import javax.inject.Singleton;

        @Singleton
        @Component
        interface AppComponent extends DaggerLifecycleComponent {}
        """)

        val expected = JavaFileObjects.forSourceString("test.component.AppComponentLifecycleDeps", """
        // Generated by @DaggerLifecycleComponent. Do not modify!
        package test.component;

        import com.victorrendina.dagger2.lifecycle.DaggerLifecycleDependencyProvider;
        import java.lang.Override;
        import java.lang.SuppressWarnings;
        import javax.inject.Inject;
        import javax.inject.Provider;
        import test.FirstDep;
        import test.SecondDep;

        public final class AppComponentLifecycleDeps implements DaggerLifecycleDependencyProvider {
          private final Provider[] autoStart;

          private final Provider[] autoDispose;

          @Inject
          public AppComponentLifecycleDeps(Provider<FirstDep> firstDep, Provider<SecondDep> secondDep) {
            autoStart = new Provider[]{
                firstDep
                };
            autoDispose = new Provider[]{
                firstDep,
                secondDep
                };
          }

          @SuppressWarnings("unchecked")
          @Override
          public Provider[] getAutoStart() {
            return autoStart;
          }

          @SuppressWarnings("unchecked")
          @Override
          public Provider[] getAutoDispose() {
            return autoDispose;
          }
        }
        """)

        assertAbout(JavaSourcesSubjectFactory.javaSources())
                .that(listOf(firstDep, secondDep, component))
                .processedWith(DaggerLifecycleProcessor())
                .compilesWithoutError()
                .and()
                .generatesSources(expected)
    }

    @Test
    fun missingScopeAnnotation() {
        val missingScope = JavaFileObjects.forSourceString("test.SingletonAuto", """
      package test;
        import com.victorrendina.dagger2.lifecycle.AutoDispose;
        import com.victorrendina.dagger2.lifecycle.AutoStart;
        import com.victorrendina.dagger2.lifecycle.DaggerLifecycle;

        @DaggerLifecycle
        class SingletonAuto implements AutoStart, AutoDispose {
            @Override
            public void dispose() { }

            @Override
            public void start() { }
        }
    """)

        assertAbout(JavaSourcesSubjectFactory.javaSources())
                .that(listOf(missingScope))
                .processedWith(DaggerLifecycleProcessor())
                .failsToCompile()
                .withErrorContaining("Missing scope annotation")
    }

    @Test
    fun missingInterface() {
        val component = JavaFileObjects.forSourceString("test.component.AppComponent", """
        package test.component;

        import com.victorrendina.dagger2.lifecycle.DaggerLifecycleComponent;
        import dagger.Component;
        import javax.inject.Singleton;

        @Singleton
        @Component
        interface AppComponent extends DaggerLifecycleComponent {}
        """)

        val missingInterface = JavaFileObjects.forSourceString("test.TestDep", """
      package test;
        import com.victorrendina.dagger2.lifecycle.AutoDispose;
        import com.victorrendina.dagger2.lifecycle.AutoStart;
        import com.victorrendina.dagger2.lifecycle.DaggerLifecycle;

        import javax.inject.Singleton;

        @DaggerLifecycle
        @Singleton
        class TestDep {}
    """)

        assertAbout(JavaSourcesSubjectFactory.javaSources())
                .that(listOf(component, missingInterface))
                .processedWith(DaggerLifecycleProcessor())
                .failsToCompile()
                .withErrorContaining("Missing interface(s) on")
    }

    @Test
    fun missingComponentExtension() {
        val component = JavaFileObjects.forSourceString("test.component.AppComponent", """
        package test.component;

        import com.victorrendina.dagger2.lifecycle.DaggerLifecycleComponent;
        import dagger.Component;
        import javax.inject.Singleton;

        @Singleton
        @Component
        interface AppComponent {}
        """)

        val testDep = JavaFileObjects.forSourceString("test.TestDep", """
      package test;
        import com.victorrendina.dagger2.lifecycle.AutoDispose;
        import com.victorrendina.dagger2.lifecycle.AutoStart;
        import com.victorrendina.dagger2.lifecycle.DaggerLifecycle;

        import javax.inject.Singleton;

        @DaggerLifecycle
        @Singleton
        class TestDep implements AutoStart, AutoDispose {}
    """)

        assertAbout(JavaSourcesSubjectFactory.javaSources())
                .that(listOf(component, testDep))
                .processedWith(DaggerLifecycleProcessor())
                .failsToCompile()
                .withErrorContaining("component implement DaggerLifecycleComponent")
    }
}